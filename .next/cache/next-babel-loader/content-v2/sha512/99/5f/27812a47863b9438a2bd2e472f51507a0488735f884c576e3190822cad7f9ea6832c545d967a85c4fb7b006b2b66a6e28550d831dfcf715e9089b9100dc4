{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\attie\\\\nextjs\\\\pages\\\\posts\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Title from \"../../components/title\";\nimport Layout from \"../../components/layout\";\nimport Link from \"next/link\";\nexport default function Posts({\n  posts\n}) {\n  //render do lado do cliente isso serviria\n  //     const [posts, setPosts] = React.useState([])\n  //     React.useEffect(()=>{\n  // const fetchPosts = async ()=>{\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n  //     const newPosts = await res.json()\n  //    setPosts(newPosts)\n  // };\n  // fetchPosts();\n  //     },[])\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Posts Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-1516252900\",\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: `/posts/[id]`,\n          as: `/posts/${post.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"jsx-1516252900\" + \" \" + 'card',\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"jsx-1516252900\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"jsx-1516252900\",\n              children: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1516252900\",\n      children: \".grid.jsx-1516252900{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;max-width:800px;margin-top:2rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXR0aWVcXG5leHRqc1xccGFnZXNcXHBvc3RzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQ1MsQUFHMEIsMEVBQ0UseURBQ0MsZ0JBQ0EsZ0JBQ3BCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcYXR0aWVcXG5leHRqc1xccGFnZXNcXHBvc3RzXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFRpdGxlIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3RpdGxlXCI7XHJcbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvbGF5b3V0XCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdHMoeyBwb3N0cyB9KSB7XHJcbiAgLy9yZW5kZXIgZG8gbGFkbyBkbyBjbGllbnRlIGlzc28gc2VydmlyaWFcclxuICAvLyAgICAgY29uc3QgW3Bvc3RzLCBzZXRQb3N0c10gPSBSZWFjdC51c2VTdGF0ZShbXSlcclxuICAvLyAgICAgUmVhY3QudXNlRWZmZWN0KCgpPT57XHJcbiAgLy8gY29uc3QgZmV0Y2hQb3N0cyA9IGFzeW5jICgpPT57XHJcbiAgLy8gICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMnKVxyXG4gIC8vICAgICBjb25zdCBuZXdQb3N0cyA9IGF3YWl0IHJlcy5qc29uKClcclxuICAvLyAgICBzZXRQb3N0cyhuZXdQb3N0cylcclxuICAvLyB9O1xyXG4gIC8vIGZldGNoUG9zdHMoKTtcclxuXHJcbiAgLy8gICAgIH0sW10pXHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8TGF5b3V0PlxyXG4gICAgICA8VGl0bGU+UG9zdHMgUGFnZTwvVGl0bGU+XHJcbiAgICAgIDxkaXY+XHJcbiAgICAgICAge3Bvc3RzLm1hcChwb3N0ID0+IHtcclxuICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvcG9zdHMvW2lkXWB9IGFzPXtgL3Bvc3RzLyR7cG9zdC5pZH1gfSBrZXk9e3Bvc3QuaWR9PlxyXG4gICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT0nY2FyZCc+XHJcbiAgICAgICAgICAgICAgICA8aDM+e3Bvc3QudGl0bGV9PC9oMz5cclxuICAgICAgICAgICAgICAgIDxwPntwb3N0LmJvZHl9PC9wPlxyXG4gICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgKVxyXG4gICAgICAgIH0pfVxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPHN0eWxlIGpzeD5cclxuICAgICAgICB7YFxyXG4gICAgICAgIC5ncmlke1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogODAwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIGB9XHJcbiAgICAgIDwvc3R5bGU+XHJcbiAgICA8L0xheW91dD5cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKCkge1xyXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cycpO1xyXG4gICAgY29uc3QgcG9zdHMgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gIFxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcHJvcHM6IHtcclxuICAgICAgICBwb3N0c1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\attie\\\\\\\\nextjs\\\\\\\\pages\\\\\\\\posts\\\\\\\\index.js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\nexport async function getServerSideProps() {\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n  const posts = await res.json();\n  return {\n    props: {\n      posts\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/attie/nextjs/pages/posts/index.js"],"names":["React","Title","Layout","Link","Posts","posts","map","post","id","title","body","getServerSideProps","res","fetch","json","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACjB,4BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,aAAb;AAA2B,UAAA,EAAE,EAAG,UAASA,IAAI,CAACC,EAAG,EAAjD;AAAA,iCACE;AAAA,gDAAa,MAAb;AAAA,oCACE;AAAA;AAAA,wBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA,wBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAyDH,IAAI,CAACC,EAA9D;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;AAED,OAAO,eAAeG,kBAAf,GAAoC;AACvC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMR,KAAK,GAAG,MAAMO,GAAG,CAACE,IAAJ,EAApB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLV,MAAAA;AADK;AADF,GAAP;AAKD","sourcesContent":["import React from \"react\";\r\nimport Title from \"../../components/title\";\r\nimport Layout from \"../../components/layout\";\r\nimport Link from \"next/link\";\r\nexport default function Posts({ posts }) {\r\n  //render do lado do cliente isso serviria\r\n  //     const [posts, setPosts] = React.useState([])\r\n  //     React.useEffect(()=>{\r\n  // const fetchPosts = async ()=>{\r\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n  //     const newPosts = await res.json()\r\n  //    setPosts(newPosts)\r\n  // };\r\n  // fetchPosts();\r\n\r\n  //     },[])\r\n\r\n  return (\r\n    <Layout>\r\n      <Title>Posts Page</Title>\r\n      <div>\r\n        {posts.map(post => {\r\n          return (\r\n            <Link href={`/posts/[id]`} as={`/posts/${post.id}`} key={post.id}>\r\n              <a className='card'>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n              </a>\r\n            </Link>\r\n          )\r\n        })}\r\n      </div>\r\n      <style jsx>\r\n        {`\r\n        .grid{\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            max-width: 800px;\r\n            margin-top: 2rem;\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        `}\r\n      </style>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps() {\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n    const posts = await res.json();\r\n  \r\n    return {\r\n      props: {\r\n        posts\r\n      }\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}