{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\attie\\\\nextjs\\\\pages\\\\posts\\\\index.js\";\nimport React from \"react\";\nimport Title from \"../../components/title\";\nimport Layout from \"../../components/layout\";\nimport Link from \"next/link\";\nexport default function Posts({\n  posts\n}) {\n  //render do lado do cliente isso serviria\n  //     const [posts, setPosts] = React.useState([])\n  //     React.useEffect(()=>{\n  // const fetchPosts = async ()=>{\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n  //     const newPosts = await res.json()\n  //    setPosts(newPosts)\n  // };\n  // fetchPosts();\n  //     },[])\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Posts Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/posts/[id]\",\n          as: `/posts/${posts.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\nexport async function getServerSideProsp() {\n  //com versão anterior seria getInitalProps\n  //isso vai ocorrer do lado do servidor nao do cliente\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n  const posts = await res.json();\n  return {\n    props: {\n      posts\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/attie/nextjs/pages/posts/index.js"],"names":["React","Title","Layout","Link","Posts","posts","map","post","id","title","body","getServerSideProsp","res","fetch","json","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAWC,IAAI,IAAI;AAClB,4BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE,aAAZ;AAA2B,UAAA,EAAE,EAAG,UAASF,KAAK,CAACG,EAAG,EAAlD;AAAA,iCACE;AAAA,oCACE;AAAA,wBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAA0DH,IAAI,CAACC,EAA/D;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;AAED,OAAO,eAAeG,kBAAf,GAAoC;AACzC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMR,KAAK,GAAG,MAAMO,GAAG,CAACE,IAAJ,EAApB;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLV,MAAAA;AADK;AADF,GAAP;AAKD","sourcesContent":["import React from \"react\";\r\nimport Title from \"../../components/title\";\r\nimport Layout from \"../../components/layout\";\r\nimport Link from \"next/link\";\r\nexport default function Posts({ posts }) {\r\n  //render do lado do cliente isso serviria\r\n  //     const [posts, setPosts] = React.useState([])\r\n  //     React.useEffect(()=>{\r\n  // const fetchPosts = async ()=>{\r\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n  //     const newPosts = await res.json()\r\n  //    setPosts(newPosts)\r\n  // };\r\n  // fetchPosts();\r\n\r\n  //     },[])\r\n\r\n  return (\r\n    <Layout>\r\n      <Title>Posts Page</Title>\r\n      <div>\r\n        {posts.map((post => {\r\n          return (\r\n            <Link href={\"/posts/[id]\"} as={`/posts/${posts.id}`} key={post.id}>\r\n              <a>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n              </a>\r\n            </Link>\r\n          )\r\n        }))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProsp() {\r\n  //com versão anterior seria getInitalProps\r\n  //isso vai ocorrer do lado do servidor nao do cliente\r\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\r\n  const posts = await res.json();\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}