{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/attie/nextjs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/attie/nextjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\attie\\\\nextjs\\\\pages\\\\posts\\\\index.js\";\nimport React from 'react';\nimport Title from '../../components/title';\nimport Layout from '../../components/layout';\nimport Link from 'next/link';\nexport default function Posts(_ref) {\n  var _this = this;\n\n  var posts = _ref.posts;\n  //render do lado do cliente isso serviria\n  //     const [posts, setPosts] = React.useState([])\n  //     React.useEffect(()=>{\n  // const fetchPosts = async ()=>{\n  //     const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n  //     const newPosts = await res.json()\n  //    setPosts(newPosts)\n  // };\n  // fetchPosts();\n  //     },[])\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Posts Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(function (post) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: '/posts/[id]',\n          as: \"/posts/\".concat(posts.id),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 5\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 5\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 1\n          }, _this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 1\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_c = Posts;\nexport function getServerSideProsp() {\n  return _getServerSideProsp.apply(this, arguments);\n}\n\nfunction _getServerSideProsp() {\n  _getServerSideProsp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://jsonplaceholder.typicode.com/posts');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            posts = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                posts: posts\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getServerSideProsp.apply(this, arguments);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/attie/nextjs/pages/posts/index.js"],"names":["React","Title","Layout","Link","Posts","posts","map","post","id","title","body","getServerSideProsp","fetch","res","json","props"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,eAAe,SAASC,KAAT,OAAuB;AAAA;;AAAA,MAAPC,KAAO,QAAPA,KAAO;AAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEI,sBAEI,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAMA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAE;AAClC,4BACA,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE,aAAZ;AAA2B,UAAA,EAAE,mBAAYF,KAAK,CAACG,EAAlB,CAA7B;AAAA,iCACA;AAAA,oCACI;AAAA,wBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA,wBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,qBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,WAA2DH,IAAI,CAACC,EAAhE;AAAA;AAAA;AAAA;AAAA,iBADA;AAQa,OATK;AAAN;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH;KA/BuBJ,K;AAiCxB,gBAAuBO,kBAAvB;AAAA;AAAA;;;iFAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGWC,KAAK,CAAC,4CAAD,CAHhB;;AAAA;AAGDC,YAAAA,GAHC;AAAA;AAAA,mBAIaA,GAAG,CAACC,IAAJ,EAJb;;AAAA;AAIDT,YAAAA,KAJC;AAAA,6CAKA;AACHU,cAAAA,KAAK,EAAC;AACFV,gBAAAA,KAAK,EAALA;AADE;AADH,aALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import React from 'react'\r\nimport Title from '../../components/title';\r\nimport Layout from '../../components/layout';\r\nimport Link from 'next/link';\r\nexport default function Posts({posts}){\r\n    //render do lado do cliente isso serviria\r\n//     const [posts, setPosts] = React.useState([])\r\n//     React.useEffect(()=>{\r\n// const fetchPosts = async ()=>{\r\n//     const res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n//     const newPosts = await res.json()\r\n//    setPosts(newPosts)\r\n// };\r\n// fetchPosts();\r\n\r\n\r\n//     },[])\r\n    \r\n    return(\r\n        \r\n        <Layout>\r\n            <Title>Posts Page</Title>\r\n            <div>{posts.map(post=>{\r\nreturn(\r\n<Link href={'/posts/[id]'} as={`/posts/${posts.id}` } key={post.id}>\r\n<a>\r\n    <h3>{post.title}</h3>\r\n    <p>{post.body}</p>\r\n</a>\r\n</Link>\r\n)\r\n            })}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport async  function getServerSideProsp(){\r\n//com vers√£o anterior seria getInitalProps\r\n//isso vai ocorrer do lado do servidor nao do cliente\r\nconst res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\nconst posts = await res.json();\r\nreturn {\r\n    props:{\r\n        posts\r\n    }\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}